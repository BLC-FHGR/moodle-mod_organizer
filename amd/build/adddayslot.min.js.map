{"version":3,"sources":["../src/adddayslot.js"],"names":["define","$","instance","Adddayslot","totalslots","displayallslots","totalday","totaltotal","current","init","param","relativedeadline","relativedeadlinestring","allowcreationofpasttimeslots","pasttimeslotsstring","i","val","closest","hide","change","id","attr","nextindex","parseInt","split","show","evaluateallrows","not","on","startevaluation","prop","e","name","target","replace","valdayfrom","valdayto","valfrom","indexOf","periodstartdate","getstartdate","periodenddate","getenddate","daydate","addDays","jsdaydate","Date","iday","getDay","iweekday","pdate","getduration","jspdate","pday","pweekday","hours","getHours","minutes","getMinutes","pseconds","evaluaterow","resetrowevaluation","writetotal","howmanyslots","getslots","slots","slotsnotcreatedduetodeadline","slotsnotcreatedduetopasttime","pax","getpax","forecaststring","toString","html","dayfromvalue","daytovalue","valto","duration","iteration","getgap","datefrom","dateto","itime","now","date","getTime","returnvalues","isNumeric","totalpax","each","isNaN","startdateday","startdatemonth","startdateyear","startdatedate","enddateday","enddatemonth","enddateyear","enddatedate","durationnumber","durationtimeunit","gapnumber","gaptimeunit","gap","days","result","setDate","getDate"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/.\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package mod\n * @subpackage organizer\n * @copyright 2020 Thomas Niedermaier (thomas.niedermaier@gmail.com)\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Create new dayslots\n */\n\n\ndefine(\n    ['jquery'], function($) {\n\n        /**\n         * @constructor\n         * @alias module:mod_organizer/adddayslot\n         */\n        var Adddayslot = function() {\n\n            this.totalslots = 0;\n            this.displayallslots = 0;\n            this.totalday = \"\";\n            this.totaltotal = \"\";\n            this.current = \"0\";\n        };\n\n        var instance = new Adddayslot();\n\n        instance.init = function(param) {\n\n            instance.totalslots = param.totalslots; // Initial maximum of days (despite only one is displayed).\n            instance.displayallslots = param.displayallslots; // Whether to display all days so far generated.\n            instance.totalday = param.totalday; // String for new slots amount status message for a day.\n            instance.totaltotal = param.totaltotal; // String for new slots amount total status message.\n            instance.relativedeadline = param.relativedeadline; // Relative deadline for slot registrations in seconds.\n            instance.relativedeadlinestring = param.relativedeadlinestring; // String warning message if slots had\n            // not been created due to registration deadline. \"xxx\" is replaced by the number of not created slots.\n            instance.allowcreationofpasttimeslots = param.allowcreationofpasttimeslots;// Deadline for registrations(s).\n            instance.pasttimeslotsstring = param.pasttimeslotsstring; // String warning message if slots had\n\n            if (instance.displayallslots == 0) { // So the form is loaded initially.\n\n                // Hide all days except the first one.\n                for (var i = instance.totalslots - 1; i > 0; i--) {\n                    if ($('#id_newslots_' + String(i) + '_day').val() == -1) {\n                        $(\"#id_newslots_\" + String(i) + \"_day\").closest(\".form-group.row.fitem\").hide(); // Boost-theme.\n                        $(\"#fgroup_id_slotgroup\" + String(i)).hide(); // Clean-theme.\n                    } else {\n                        break;\n                    }\n                }\n                // As long as not all slots are visible hide the add day button.\n                if (i < instance.totalslots - 1) {\n                    $('#id_addday').hide();\n                }\n\n                // As soon as a to time is edited, display the next day.\n                $('[id^=id_newslots_]').change(\n                    function() {\n                        var id = $(this).attr(\"id\");\n                        var nextindex = parseInt(id.split(\"_\")[2]) + 1;\n                        if (nextindex > instance.current) {\n                            $(\"#id_newslots_\" + String(nextindex) + \"_day\").closest(\".form-group.row.fitem\").show(); // Boost-theme.\n                            $(\"#fgroup_id_slotgroup\" + String(nextindex)).show(); // Clean-theme.\n                            if (nextindex == instance.totalslots) {\n                                $('#id_addday').show();\n                            }\n                            instance.current++;\n                        }\n                    }\n                );\n            } else {\n                instance.current = instance.totalslots;\n                evaluateallrows();\n            }\n\n            // If a new slot field is changed evaluate the row to provide the forecast.\n            $('[name^=\"newslots\"]').not(':checkbox').on('change', startevaluation);\n\n            // After relevant input is changed recalculate the forecasts.\n            $('input[name^=\"duration\"]').on('change', evaluateallrows);\n            $('select[name^=\"duration\"]').on('change', evaluateallrows);\n            $('input[name^=\"gap\"]').on('change', evaluateallrows);\n            $('select[name^=\"gap\"]').on('change', evaluateallrows);\n            $('input[name=\"maxparticipants\"]').on('change', evaluateallrows);\n            $('select[name^=\"startdate\"]').on('change', evaluateallrows);\n            $('select[name^=\"enddate\"]').on('change', evaluateallrows);\n\n            // If apply period starts now deactivate apply date in form.\n            if ($(\"#id_now\").prop(\"checked\") == true) {\n                $('[name^=availablefrom]').prop(\"disabled\", true);\n                $('#id_availablefrom_timeunit').prop(\"disabled\", true);\n            }\n\n            // Get index of changed row and start evaluation.\n            function startevaluation(e) {\n                var name = $(e.target).attr(\"name\");\n                var i = parseInt(name.replace('newslots[', ''));\n                var valdayfrom = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[day\\]']\").val());\n                var valdayto = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[dayto\\]']\").val());\n                var valfrom = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[from\\]']\").val());\n                // Proposal for to-date's time when from-date's time has been changed.\n                if ((valdayfrom != -1 && valdayto == -1) || name.indexOf(\"[from]\") != -1) {\n                    var periodstartdate = getstartdate();\n                    var periodenddate = getenddate();\n                    for (var daydate = periodstartdate; daydate <= periodenddate; daydate = addDays(daydate * 1000, 1)) {\n                        var jsdaydate = new Date(daydate * 1000);\n                        var iday = jsdaydate.getDay();\n                        var iweekday = iday ? (iday - 1) : 6;\n                        if (valdayfrom == iweekday) {\n                            break;\n                        }\n                    }\n                    var pdate = (jsdaydate / 1000) + valfrom + getduration();\n                    var jspdate = new Date(pdate * 1000);\n                    var pday = jspdate.getDay();\n                    var pweekday = pday ? (pday - 1) : 6;\n                    $(\"select[name='newslots\\[\" + i + \"\\]\\[dayto\\]']\").val(pweekday);\n                    var hours = jspdate.getHours();\n                    var minutes = jspdate.getMinutes() + (hours * 60);\n                    minutes = minutes % 5 ? minutes + (5 - (minutes % 5)) : minutes;\n                    var pseconds = minutes * 60;\n                    $(\"select[name='newslots\\[\" + i + \"\\]\\[to\\]']\").val(pseconds);\n                }\n                valdayfrom = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[day\\]']\").val());\n                valdayto = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[dayto\\]']\").val());\n                if (valdayfrom != -1 && valdayto != -1) {\n                    evaluaterow(i);\n                } else {\n                    resetrowevaluation(i);\n                }\n                writetotal();\n            }\n\n            // Evaluate a certain row to make forecast.\n            function evaluaterow(i) {\n                var howmanyslots = getslots(i);\n                var slots = howmanyslots[0];\n                var slotsnotcreatedduetodeadline = howmanyslots[1];\n                var slotsnotcreatedduetopasttime = howmanyslots[2];\n                var pax = getpax();\n                pax = pax * slots;\n                var forecaststring = instance.totalday.replace(\"xxx\", slots.toString()).replace(\"yyy\", pax.toString());\n                if (slotsnotcreatedduetodeadline > 0) {\n                    forecaststring += \" (\" + instance.relativedeadlinestring.replace(\"xxx\",\n                        slotsnotcreatedduetodeadline.toString()) + \")\";\n                }\n                if (slotsnotcreatedduetopasttime > 0) {\n                    forecaststring += \" (\" + instance.pasttimeslotsstring.replace(\"xxx\",\n                        slotsnotcreatedduetopasttime.toString()) + \")\";\n                }\n                $(\"span[name='forecastday_\" + i + \"']\").html(forecaststring);\n                $(\"span[name='newslots_\" + i + \"']\").html(slots.toString());\n                $(\"span[name='newpax_\" + i + \"']\").html(pax.toString());\n            }\n\n            // Set row evaluation to zero.\n            function resetrowevaluation(i) {\n                var slots = 0;\n                var pax = 0;\n                var forecaststring = instance.totalday.replace(\"xxx\", slots.toString()).replace(\"yyy\", pax.toString());\n                $(\"span[name='forecastday_\" + i + \"']\").html(forecaststring);\n                $(\"span[name='newslots_\" + i + \"']\").html(slots.toString());\n                $(\"span[name='newpax_\" + i + \"']\").html(pax.toString());\n            }\n\n            // Reevaluate all rows and write the totals.\n            function evaluateallrows() {\n                for (var i = 0; i < instance.current; i++) {\n                    evaluaterow(i);\n                }\n                writetotal();\n            }\n\n            // Get amount of slots of row i.\n            function getslots(i) {\n                // No selected day-from: return 0.\n                var dayfromvalue = parseInt($(\"select[name^='newslots\\[\" + i + \"\\]\\[day\\]']\").val());\n                if (dayfromvalue == -1) {\n                    return 0;\n                }\n                // No selected day to: return 0.\n                var daytovalue = parseInt($(\"select[name^='newslots\\[\" + i + \"\\]\\[dayto\\]']\").val());\n                if (daytovalue == -1) {\n                    return 0;\n                }\n                // Get period, time from, slot duration and gap between slots.\n                var periodstartdate = getstartdate();\n                var periodenddate = getenddate();\n                var valfrom = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[from\\]']\").val());\n                var valto = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[to\\]']\").val());\n                // Duration + gap in seconds.\n                var duration = getduration();\n                var iteration = duration + getgap();\n                var iweekday, daydate, jsdaydate, datefrom, dateto, itime;\n                var slots = 0;\n                var slotsnotcreatedduetodeadline = 0;\n                var slotsnotcreatedduetopasttime = 0;\n                // Iterate through days of period.\n                for (daydate = periodstartdate; daydate <= periodenddate; daydate = addDays(daydate * 1000, 1)) {\n                    jsdaydate = new Date(daydate * 1000);\n                    iweekday = jsdaydate.getDay() ? (jsdaydate.getDay() - 1) : 6;\n                    if (dayfromvalue != iweekday) {\n                        continue;\n                    }\n                    datefrom = daydate + valfrom;\n                    dateto = daydate + ((daytovalue - dayfromvalue) * 86400) + valto;\n                    while (dateto < datefrom) {\n                        dateto += (7 * 86400);\n                    }\n                    // New: Slot overlapping period end date is allowed!\n                    if (datefrom < periodstartdate || datefrom > periodenddate) {\n                        continue;\n                    }\n                    var now = new Date();\n                    var date = now.getTime() / 1000;\n                    for (itime = datefrom; itime + duration <= dateto; itime += iteration) {\n                        if (itime - date < instance.relativedeadline && itime - date > 0) {\n                            slotsnotcreatedduetodeadline++;\n                        } else if (itime - date < 0 && instance.allowcreationofpasttimeslots == 0) {\n                            slotsnotcreatedduetopasttime++;\n                        } else {\n                            slots++;\n                        }\n                    }\n                }\n                var returnvalues = [slots, slotsnotcreatedduetodeadline, slotsnotcreatedduetopasttime];\n                return returnvalues;\n            }\n\n            function getpax() {\n                var pax = $('input[name=maxparticipants]').val();\n                if ($.isNumeric(pax)) {\n                    return pax;\n                } else {\n                    return 0;\n                }\n            }\n\n            function writetotal() {\n                var totalslots = 0;\n                var totalpax = 0;\n                $(\"span[name^='newslots_']\").each(function() {\n                    var slots = parseInt($(this).html());\n                    if (isNaN(slots) == false) {\n                        totalslots += slots;\n                    }\n                });\n                $(\"span[name^='newpax_']\").each(function() {\n                    var pax = parseInt($(this).html());\n                    if (isNaN(pax) == false) {\n                        totalpax += pax;\n                    }\n                });\n                var forecaststring = instance.totaltotal.replace(\"xxx\", totalslots.toString()).replace(\"yyy\", totalpax.toString());\n                $(\"div[name='organizer_newslots_forecasttotal']\").html(forecaststring);\n            }\n\n            function getstartdate() {\n                var startdateday = $(\"select[name='startdate\\[day\\]']\").val();\n                var startdatemonth = $(\"select[name='startdate\\[month\\]']\").val() - 1;\n                var startdateyear = $(\"select[name='startdate\\[year\\]']\").val();\n                var startdatedate = new Date(startdateyear, startdatemonth, startdateday);\n                return startdatedate.getTime() / 1000;\n            }\n\n            function getenddate() {\n                var enddateday = $(\"select[name='enddate\\[day\\]']\").val();\n                var enddatemonth = $(\"select[name='enddate\\[month\\]']\").val() - 1;\n                var enddateyear = $(\"select[name='enddate\\[year\\]']\").val();\n                var enddatedate = new Date(enddateyear, enddatemonth, enddateday);\n                return enddatedate.getTime() / 1000 + 86399; // Include last day of period.\n            }\n\n            function getduration() {\n                var durationnumber = parseInt($(\"input[name='duration\\[number\\]']\").val());\n                var durationtimeunit = parseInt($(\"select[name='duration\\[timeunit\\]']\").val());\n                if (isNaN(durationnumber)) {\n                    return 0;\n                }\n                // Duration in seconds.\n                var duration = durationnumber * durationtimeunit;\n                return duration;\n            }\n\n            function getgap() {\n                var gapnumber = parseInt($(\"input[name='gap\\[number\\]']\").val());\n                var gaptimeunit = parseInt($(\"select[name='gap\\[timeunit\\]']\").val());\n                if (isNaN(gapnumber)) {\n                    gapnumber = 0;\n                }\n                // Gap in seconds.\n                var gap = gapnumber * gaptimeunit;\n                return gap;\n            }\n\n            function addDays(date, days) {\n                var result = new Date(date);\n                result.setDate(result.getDate() + days);\n                return result.getTime() / 1000;\n            }\n        };\n\n        return instance;\n\n    });"],"file":"adddayslot.min.js"}