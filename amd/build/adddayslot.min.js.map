{"version":3,"file":"adddayslot.min.js","sources":["../src/adddayslot.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/.\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * @package mod\r\n * @subpackage organizer\r\n * @copyright 2020 Thomas Niedermaier (thomas.niedermaier@gmail.com)\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * Create new dayslots\r\n */\r\n\r\n\r\ndefine(\r\n    ['jquery'], function($) {\r\n\r\n        /**\r\n         * @constructor\r\n         * @alias module:mod_organizer/adddayslot\r\n         */\r\n        var Adddayslot = function() {\r\n\r\n            this.totalslots = 0;\r\n            this.displayallslots = 0;\r\n            this.totalday = \"\";\r\n            this.totaltotal = \"\";\r\n            this.current = \"0\";\r\n        };\r\n\r\n        var instance = new Adddayslot();\r\n\r\n        instance.init = function(param) {\r\n\r\n            instance.totalslots = param.totalslots; // Initial maximum of days (despite only one is displayed).\r\n            instance.displayallslots = param.displayallslots; // Whether to display all days so far generated.\r\n            instance.totalday = param.totalday; // String for new slots amount status message for a day.\r\n            instance.totaltotal = param.totaltotal; // String for new slots amount total status message.\r\n            instance.relativedeadline = param.relativedeadline; // Relative deadline for slot registrations in seconds.\r\n            instance.relativedeadlinestring = param.relativedeadlinestring; // String warning message if slots had\r\n            // not been created due to registration deadline. \"xxx\" is replaced by the number of not created slots.\r\n            instance.allowcreationofpasttimeslots = param.allowcreationofpasttimeslots;// Deadline for registrations(s).\r\n            instance.pasttimeslotsstring = param.pasttimeslotsstring; // String warning message if slots had\r\n\r\n            if (instance.displayallslots == 0) { // So the form is loaded initially.\r\n\r\n                // Hide all days except the first one.\r\n                for (var i = instance.totalslots - 1; i > 0; i--) {\r\n                    if ($('#id_newslots_' + String(i) + '_day').val() == -1) {\r\n                        $(\"#id_newslots_\" + String(i) + \"_day\").closest(\".form-group.row.fitem\").hide(); // Boost-theme.\r\n                        $(\"#fgroup_id_slotgroup\" + String(i)).hide(); // Clean-theme.\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                // As long as not all slots are visible hide the add day button.\r\n                if (i < instance.totalslots - 1) {\r\n                    $('#id_addday').hide();\r\n                }\r\n\r\n                // As soon as a to time is edited, display the next day.\r\n                $('[id^=id_newslots_]').change(\r\n                    function() {\r\n                        var id = $(this).attr(\"id\");\r\n                        var nextindex = parseInt(id.split(\"_\")[2]) + 1;\r\n                        if (nextindex > instance.current) {\r\n                            $(\"#id_newslots_\" + String(nextindex) + \"_day\").closest(\".form-group.row.fitem\").show(); // Boost-theme.\r\n                            $(\"#fgroup_id_slotgroup\" + String(nextindex)).show(); // Clean-theme.\r\n                            if (nextindex == instance.totalslots) {\r\n                                $('#id_addday').show();\r\n                            }\r\n                            instance.current++;\r\n                        }\r\n                    }\r\n                );\r\n            } else {\r\n                instance.current = instance.totalslots;\r\n                evaluateallrows();\r\n            }\r\n\r\n            // If a new slot field is changed evaluate the row to provide the forecast.\r\n            $('[name^=\"newslots\"]').not(':checkbox').on('change', startevaluation);\r\n\r\n            // After relevant input is changed recalculate the forecasts.\r\n            $('input[name^=\"duration\"]').on('change', evaluateallrows);\r\n            $('select[name^=\"duration\"]').on('change', evaluateallrows);\r\n            $('input[name^=\"gap\"]').on('change', evaluateallrows);\r\n            $('select[name^=\"gap\"]').on('change', evaluateallrows);\r\n            $('input[name=\"maxparticipants\"]').on('change', evaluateallrows);\r\n            $('select[name^=\"startdate\"]').on('change', evaluateallrows);\r\n            $('select[name^=\"enddate\"]').on('change', evaluateallrows);\r\n\r\n            // If apply period starts now deactivate apply date in form.\r\n            if ($(\"#id_now\").prop(\"checked\") == true) {\r\n                $('[name^=availablefrom]').prop(\"disabled\", true);\r\n                $('#id_availablefrom_timeunit').prop(\"disabled\", true);\r\n            }\r\n\r\n            // Get index of changed row and start evaluation.\r\n            function startevaluation(e) {\r\n                var name = $(e.target).attr(\"name\");\r\n                var i = parseInt(name.replace('newslots[', ''));\r\n                var valdayfrom = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[day\\]']\").val());\r\n                var valdayto = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[dayto\\]']\").val());\r\n                var valfrom = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[from\\]']\").val());\r\n                // Proposal for to-date's time when from-date's time has been changed.\r\n                if ((valdayfrom != -1 && valdayto == -1) || name.indexOf(\"[from]\") != -1) {\r\n                    var periodstartdate = getstartdate();\r\n                    var periodenddate = getenddate();\r\n                    for (var daydate = periodstartdate; daydate <= periodenddate; daydate = addDays(daydate * 1000, 1)) {\r\n                        var jsdaydate = new Date(daydate * 1000);\r\n                        var iday = jsdaydate.getDay();\r\n                        var iweekday = iday ? (iday - 1) : 6;\r\n                        if (valdayfrom == iweekday) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    var pdate = (jsdaydate / 1000) + valfrom + getduration();\r\n                    var jspdate = new Date(pdate * 1000);\r\n                    var pday = jspdate.getDay();\r\n                    var pweekday = pday ? (pday - 1) : 6;\r\n                    $(\"select[name='newslots\\[\" + i + \"\\]\\[dayto\\]']\").val(pweekday);\r\n                    var hours = jspdate.getHours();\r\n                    var minutes = jspdate.getMinutes() + (hours * 60);\r\n                    minutes = minutes % 5 ? minutes + (5 - (minutes % 5)) : minutes;\r\n                    var pseconds = minutes * 60;\r\n                    $(\"select[name='newslots\\[\" + i + \"\\]\\[to\\]']\").val(pseconds);\r\n                }\r\n                valdayfrom = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[day\\]']\").val());\r\n                valdayto = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[dayto\\]']\").val());\r\n                if (valdayfrom != -1 && valdayto != -1) {\r\n                    evaluaterow(i);\r\n                } else {\r\n                    resetrowevaluation(i);\r\n                }\r\n                writetotal();\r\n            }\r\n\r\n            // Evaluate a certain row to make forecast.\r\n            function evaluaterow(i) {\r\n                var howmanyslots = getslots(i);\r\n                var slots = howmanyslots[0];\r\n                var slotsnotcreatedduetodeadline = howmanyslots[1];\r\n                var slotsnotcreatedduetopasttime = howmanyslots[2];\r\n                var pax = getpax();\r\n                pax = pax * slots;\r\n                var forecaststring = instance.totalday.replace(\"xxx\", slots.toString()).replace(\"yyy\", pax.toString());\r\n                if (slotsnotcreatedduetodeadline > 0) {\r\n                    forecaststring += \" (\" + instance.relativedeadlinestring.replace(\"xxx\",\r\n                        slotsnotcreatedduetodeadline.toString()) + \")\";\r\n                }\r\n                if (slotsnotcreatedduetopasttime > 0) {\r\n                    forecaststring += \" (\" + instance.pasttimeslotsstring.replace(\"xxx\",\r\n                        slotsnotcreatedduetopasttime.toString()) + \")\";\r\n                }\r\n                $(\"span[name='forecastday_\" + i + \"']\").html(forecaststring);\r\n                $(\"span[name='newslots_\" + i + \"']\").html(slots.toString());\r\n                $(\"span[name='newpax_\" + i + \"']\").html(pax.toString());\r\n            }\r\n\r\n            // Set row evaluation to zero.\r\n            function resetrowevaluation(i) {\r\n                var slots = 0;\r\n                var pax = 0;\r\n                var forecaststring = instance.totalday.replace(\"xxx\", slots.toString()).replace(\"yyy\", pax.toString());\r\n                $(\"span[name='forecastday_\" + i + \"']\").html(forecaststring);\r\n                $(\"span[name='newslots_\" + i + \"']\").html(slots.toString());\r\n                $(\"span[name='newpax_\" + i + \"']\").html(pax.toString());\r\n            }\r\n\r\n            // Reevaluate all rows and write the totals.\r\n            function evaluateallrows() {\r\n                for (var i = 0; i < instance.current; i++) {\r\n                    evaluaterow(i);\r\n                }\r\n                writetotal();\r\n            }\r\n\r\n            // Get amount of slots of row i.\r\n            function getslots(i) {\r\n                // No selected day-from: return 0.\r\n                var dayfromvalue = parseInt($(\"select[name^='newslots\\[\" + i + \"\\]\\[day\\]']\").val());\r\n                if (dayfromvalue == -1) {\r\n                    return 0;\r\n                }\r\n                // No selected day to: return 0.\r\n                var daytovalue = parseInt($(\"select[name^='newslots\\[\" + i + \"\\]\\[dayto\\]']\").val());\r\n                if (daytovalue == -1) {\r\n                    return 0;\r\n                }\r\n                // Get period, time from, slot duration and gap between slots.\r\n                var periodstartdate = getstartdate();\r\n                var periodenddate = getenddate();\r\n                var valfrom = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[from\\]']\").val());\r\n                var valto = parseInt($(\"select[name='newslots\\[\" + i + \"\\]\\[to\\]']\").val());\r\n                // Duration + gap in seconds.\r\n                var duration = getduration();\r\n                var iteration = duration + getgap();\r\n                var iweekday, daydate, jsdaydate, datefrom, dateto, itime;\r\n                var slots = 0;\r\n                var slotsnotcreatedduetodeadline = 0;\r\n                var slotsnotcreatedduetopasttime = 0;\r\n                // Iterate through days of period.\r\n                for (daydate = periodstartdate; daydate <= periodenddate; daydate = addDays(daydate * 1000, 1)) {\r\n                    jsdaydate = new Date(daydate * 1000);\r\n                    iweekday = jsdaydate.getDay() ? (jsdaydate.getDay() - 1) : 6;\r\n                    if (dayfromvalue != iweekday) {\r\n                        continue;\r\n                    }\r\n                    datefrom = daydate + valfrom;\r\n                    dateto = daydate + ((daytovalue - dayfromvalue) * 86400) + valto;\r\n                    while (dateto < datefrom) {\r\n                        dateto += (7 * 86400);\r\n                    }\r\n                    // New: Slot overlapping period end date is allowed!\r\n                    if (datefrom < periodstartdate || datefrom > periodenddate) {\r\n                        continue;\r\n                    }\r\n                    var now = new Date();\r\n                    var date = now.getTime() / 1000;\r\n                    for (itime = datefrom; itime + duration <= dateto; itime += iteration) {\r\n                        if (itime - date < instance.relativedeadline && itime - date > 0) {\r\n                            slotsnotcreatedduetodeadline++;\r\n                        } else if (itime - date < 0 && instance.allowcreationofpasttimeslots == 0) {\r\n                            slotsnotcreatedduetopasttime++;\r\n                        } else {\r\n                            slots++;\r\n                        }\r\n                    }\r\n                }\r\n                var returnvalues = [slots, slotsnotcreatedduetodeadline, slotsnotcreatedduetopasttime];\r\n                return returnvalues;\r\n            }\r\n\r\n            function getpax() {\r\n                var pax = $('input[name=maxparticipants]').val();\r\n                if ($.isNumeric(pax)) {\r\n                    return pax;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n\r\n            function writetotal() {\r\n                var totalslots = 0;\r\n                var totalpax = 0;\r\n                $(\"span[name^='newslots_']\").each(function() {\r\n                    var slots = parseInt($(this).html());\r\n                    if (isNaN(slots) == false) {\r\n                        totalslots += slots;\r\n                    }\r\n                });\r\n                $(\"span[name^='newpax_']\").each(function() {\r\n                    var pax = parseInt($(this).html());\r\n                    if (isNaN(pax) == false) {\r\n                        totalpax += pax;\r\n                    }\r\n                });\r\n                var forecaststring = instance.totaltotal.replace(\"xxx\", totalslots.toString()).replace(\"yyy\", totalpax.toString());\r\n                $(\"div[name='organizer_newslots_forecasttotal']\").html(forecaststring);\r\n            }\r\n\r\n            function getstartdate() {\r\n                var startdateday = $(\"select[name='startdate\\[day\\]']\").val();\r\n                var startdatemonth = $(\"select[name='startdate\\[month\\]']\").val() - 1;\r\n                var startdateyear = $(\"select[name='startdate\\[year\\]']\").val();\r\n                var startdatedate = new Date(startdateyear, startdatemonth, startdateday);\r\n                return startdatedate.getTime() / 1000;\r\n            }\r\n\r\n            function getenddate() {\r\n                var enddateday = $(\"select[name='enddate\\[day\\]']\").val();\r\n                var enddatemonth = $(\"select[name='enddate\\[month\\]']\").val() - 1;\r\n                var enddateyear = $(\"select[name='enddate\\[year\\]']\").val();\r\n                var enddatedate = new Date(enddateyear, enddatemonth, enddateday);\r\n                return enddatedate.getTime() / 1000 + 86399; // Include last day of period.\r\n            }\r\n\r\n            function getduration() {\r\n                var durationnumber = parseInt($(\"input[name='duration\\[number\\]']\").val());\r\n                var durationtimeunit = parseInt($(\"select[name='duration\\[timeunit\\]']\").val());\r\n                if (isNaN(durationnumber)) {\r\n                    return 0;\r\n                }\r\n                // Duration in seconds.\r\n                var duration = durationnumber * durationtimeunit;\r\n                return duration;\r\n            }\r\n\r\n            function getgap() {\r\n                var gapnumber = parseInt($(\"input[name='gap\\[number\\]']\").val());\r\n                var gaptimeunit = parseInt($(\"select[name='gap\\[timeunit\\]']\").val());\r\n                if (isNaN(gapnumber)) {\r\n                    gapnumber = 0;\r\n                }\r\n                // Gap in seconds.\r\n                var gap = gapnumber * gaptimeunit;\r\n                return gap;\r\n            }\r\n\r\n            function addDays(date, days) {\r\n                var result = new Date(date);\r\n                result.setDate(result.getDate() + days);\r\n                return result.getTime() / 1000;\r\n            }\r\n        };\r\n\r\n        return instance;\r\n\r\n    });"],"names":["define","$","instance","totalslots","displayallslots","totalday","totaltotal","current","init","param","relativedeadline","relativedeadlinestring","allowcreationofpasttimeslots","pasttimeslotsstring","i","String","val","closest","hide","change","id","this","attr","nextindex","parseInt","split","show","evaluateallrows","evaluaterow","howmanyslots","getslots","dayfromvalue","daytovalue","periodstartdate","daydate","jsdaydate","datefrom","dateto","itime","getstartdate","periodenddate","getenddate","valfrom","valto","duration","getduration","iteration","gapnumber","gaptimeunit","isNaN","getgap","slots","slotsnotcreatedduetodeadline","slotsnotcreatedduetopasttime","addDays","Date","getDay","date","getTime","pax","isNumeric","getpax","forecaststring","replace","toString","html","writetotal","totalpax","each","startdateday","startdatemonth","startdateyear","enddateday","enddatemonth","enddateyear","durationnumber","durationtimeunit","days","result","setDate","getDate","not","on","startevaluation","e","name","target","valdayfrom","valdayto","indexOf","iday","pdate","jspdate","pday","pweekday","hours","getHours","minutes","getMinutes","pseconds","resetrowevaluation","prop"],"mappings":"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"}