{"version":3,"sources":["../src/editform.js"],"names":["define","$","instance","Editform","imagepaths","init","param","detect_change","e","element","target","name","attr","split","val","set_icon_changed","icon","changed","initialstate","reset_modfields","reset_icons_warning","icons","warning","find","on"],"mappings":"AA2BAA,OAAM,0BACF,CAAC,QAAD,CADE,CACU,SAASC,CAAT,CAAY,IAUhBC,CAAAA,CAAQ,CAAG,GAJA,SAAXC,CAAAA,QAAW,EAAW,CACtB,KAAKC,UAAL,GACH,CARmB,CAYpBF,CAAQ,CAACG,IAAT,CAAgB,SAASC,CAAT,CAAgB,CAE5B,GAAIA,CAAK,CAACF,UAAV,CAAsB,CAClB,KAAKA,UAAL,CAAkBE,CAAK,CAACF,UAC3B,CAED,QAASG,CAAAA,CAAT,CAAuBC,CAAvB,CAA0B,IAClBC,CAAAA,CAAO,CAAGR,CAAC,CAACO,CAAC,CAACE,MAAH,CADO,CAElBC,CAAI,CAAGF,CAAO,CAACG,IAAR,CAAa,MAAb,EAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAFW,CAGtB,GAA6D,GAAzD,EAAAZ,CAAC,CAAC,gCAAkCU,CAAlC,CAAyC,GAA1C,CAAD,CAAgDG,GAAhD,EAAJ,CAAkE,CAC9Db,CAAC,CAAC,gCAAkCU,CAAlC,CAAyC,GAA1C,CAAD,CAAgDG,GAAhD,CAAoD,GAApD,EACAC,CAAgB,CAACJ,CAAD,CACnB,CACJ,CAED,QAASI,CAAAA,CAAT,CAA0BJ,CAA1B,CAAgC,CAC5B,GAAIK,CAAAA,CAAI,CAAGf,CAAC,CAAC,wBAA0BU,CAA1B,CAAiC,WAAlC,CAAZ,CACA,GAAIK,CAAI,CAACJ,IAAL,CAAU,KAAV,GAAoBV,CAAQ,CAACE,UAAT,CAAoBa,OAA5C,CAAqD,CACjDD,CAAI,CAACJ,IAAL,CAAU,KAAV,CAAiBV,CAAQ,CAACE,UAAT,CAAoBa,OAArC,EACAD,CAAI,CAACJ,IAAL,CAAU,OAAV,CAAmBX,CAAC,CAAC,kCAAD,CAAD,CAAsCa,GAAtC,EAAnB,CACH,CACJ,CAED,GAAII,CAAAA,CAAJ,CAQA,QAASC,CAAAA,CAAT,EAA2B,CACvBlB,CAAC,CAAC,gCAAD,CAAD,CAAoCa,GAApC,CAAwC,CAAxC,CACH,CAED,QAASM,CAAAA,CAAT,EAA+B,CAC3B,GAAIC,CAAAA,CAAK,CAAGpB,CAAC,CAAC,kCAAD,CAAb,CACAoB,CAAK,CAACT,IAAN,CAAW,KAAX,CAAkBV,CAAQ,CAACE,UAAT,CAAoBkB,OAAtC,EACAD,CAAK,CAACT,IAAN,CAAW,OAAX,CAAoBX,CAAC,CAAC,kCAAD,CAAD,CAAsCa,GAAtC,EAApB,CACH,CAEDb,CAAC,CAAC,cAAD,CAAD,CAAkBsB,IAAlB,CAAuB,8BAAvB,EAAuDC,EAAvD,CAA0D,QAA1D,CAAoEjB,CAApE,EACAN,CAAC,CAAC,cAAD,CAAD,CAAkBsB,IAAlB,CAAuB,4BAAvB,EAAqDC,EAArD,CAAwD,SAAxD,CAAmEjB,CAAnE,EACAN,CAAC,CAAC,eAAD,CAAD,CAAmBuB,EAAnB,CAAsB,OAAtB,CAlBA,UAA2B,CACvBL,CAAe,GACfC,CAAmB,GACnBnB,CAAC,CAAC,qDAAD,CAAD,CAAyDW,IAAzD,CAA8D,UAA9D,CAA0EM,CAA1E,CACH,CAcD,CAEH,CA7CD,CA+CA,MAAOhB,CAAAA,CAEV,CA9DC,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/.\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @package mod\n * @subpackage organizer\n * @copyright 2017 Thomas Niedermaier (thomas.niedermaier@gmail.com)\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * In edit form: Force selection of grouping if group mode is choosen.\n */\n\n\ndefine(\n    ['jquery'], function($) {\n\n        /**\n         * @constructor\n         * @alias module:mod_organizer/editform\n         */\n        var Editform = function() {\n            this.imagepaths = false;\n        };\n\n        var instance = new Editform();\n\n        instance.init = function(param) {\n\n            if (param.imagepaths) {\n                this.imagepaths = param.imagepaths;\n            }\n\n            function detect_change(e) {\n                var element = $(e.target);\n                var name = element.attr('name').split(\"[\")[0];\n                if ($(\"[id^=mform1] input[name^=mod_\" + name + \"]\").val() != \"1\") {\n                    $(\"[id^=mform1] input[name^=mod_\" + name + \"]\").val(\"1\");\n                    set_icon_changed(name);\n                }\n            }\n\n            function set_icon_changed(name) {\n                var icon = $(\"[id^=mform1] img[id$=\" + name + \"_warning]\");\n                if (icon.attr('src') != instance.imagepaths.changed) {\n                    icon.attr('src', instance.imagepaths.changed);\n                    icon.attr('title', $(\"[id^=mform1] [name=warningtext2]\").val());\n                }\n            }\n\n            var initialstate;\n\n            function reset_edit_form() {\n                reset_modfields();\n                reset_icons_warning();\n                $('[id^=mform1] [name^=availablefrom]:not([name*=now])').attr('disabled', initialstate);\n            }\n\n            function reset_modfields() {\n                $(\"[id^=mform1] input[name^=mod_]\").val(0);\n            }\n\n            function reset_icons_warning() {\n                var icons = $(\"[id^=mform1] img[name$=_warning]\");\n                icons.attr('src', instance.imagepaths.warning);\n                icons.attr('title', $(\"[id^=mform1] [name=warningtext1]\").val());\n            }\n\n            $('[id^=mform1]').find('select, input[type=checkbox]').on('change', detect_change);\n            $('[id^=mform1]').find('input[type=text], textarea').on('keydown', detect_change);\n            $('#id_editreset').on('click', reset_edit_form);\n\n        };\n\n        return instance;\n\n    }\n);\n"],"file":"editform.min.js"}