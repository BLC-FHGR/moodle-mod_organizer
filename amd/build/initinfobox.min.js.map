{"version":3,"file":"initinfobox.min.js","sources":["../src/initinfobox.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/.\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * @package\r\n * @subpackage organizer\r\n * @copyright 2020 Thomas Niedermaier (thomas.niedermaier@gmail.com)\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * Tab appointments view and students view: Load slot list according to view options stored in user prefs.\r\n */\r\n\r\n\r\ndefine(['jquery', 'core/config'], function($, config) {\r\n\r\n        /**\r\n     * @constructor\r\n     * @alias module:mod_organizer/initinfobox\r\n     */\r\n        var Initinfobox = function() {\r\n            this.studentview = 0;\r\n            this.registrationview = 0;\r\n            this.userid = 0;\r\n        };\r\n\r\n        var instance = new Initinfobox();\r\n\r\n        instance.init = function(studentview, registrationview, userid) {\r\n\r\n            instance.studentview = studentview; // Loaded on student view?\r\n            instance.registrationview = registrationview; // Loaded on registration view?\r\n            instance.userid = userid; // This user ID.\r\n\r\n            /**\r\n             * What happens when a view option checkbox is clicked or the filter field has been changed.\r\n             * @param {object} event element which has been clicked\r\n             */\r\n            function toggle_all_slots(event) {\r\n                if (event!=undefined && instance.registrationview == 0) {\r\n                    saveuserpreference();\r\n                }\r\n                var tablebody = $('#slot_overview tbody');\r\n                var showpastslots = $('#show_past_slots').is(':checked');\r\n                var showmyslotsonly = $('#show_my_slots_only').is(':checked');\r\n                var showfreeslotsonly = $('#show_free_slots_only').is(':checked');\r\n                var showhiddenslots = $('#show_hidden_slots').is(':checked');\r\n                var showregistrationsonly = $('#show_registrations_only').is(':checked');\r\n\r\n                tablebody.find('tr').show();\r\n\r\n                if (showregistrationsonly) {\r\n                    tablebody.find('tr.not_registered').hide();\r\n                }\r\n\r\n                if (!instance.studentview) {\r\n                    if (!showhiddenslots) {\r\n                        tablebody.find('tr.unavailable').hide();\r\n                    }\r\n                }\r\n\r\n                if (!showpastslots) {\r\n                    tablebody.find('tr.past_due').hide();\r\n                }\r\n\r\n                if (showmyslotsonly) {\r\n                    if (!instance.studentview) {\r\n                        tablebody.find('tr.not_my_slot').hide();\r\n                    }\r\n                }\r\n\r\n                if (showfreeslotsonly) {\r\n                    tablebody.find('tr.not_free_slot').hide();\r\n                }\r\n\r\n                var target = $('.organizer_filtertable');\r\n                if (target) {\r\n                    var filter = target.val().toUpperCase();\r\n                    if (filter) {\r\n                        var tr = tablebody.find('tr:visible:not(.info)');\r\n                        // Loop through all table rows, and hide those who don't match the search query.\r\n                        var i, j, td, text, found;\r\n                        for (i = 0; i < tr.length; i++) {\r\n                            found = false;\r\n                            td = tr[i].getElementsByTagName(\"td\");\r\n                            if (td) {\r\n                                for (j = 0; j < td.length; j++) {\r\n                                    text = extracttext(td[j]);\r\n                                    if (text) {\r\n                                        if (text.toUpperCase().indexOf(filter) > -1) {\r\n                                            found = true;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (!found) {\r\n                                $(tr[i]).hide();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                tablebody.show();\r\n                $('#counttabrows').text(tablebody.find('tr:visible:not(.info)').length);\r\n\r\n                toggle_info();\r\n            }\r\n\r\n            /**\r\n             * Check or uncheck the info row(s).\r\n             */\r\n            function toggle_info() {\r\n                var tablebody = $('#slot_overview tbody');\r\n                var noninforows = tablebody.find('tr:not(.info)');\r\n                var noneexist = noninforows.length === 0;\r\n                var anyvisible = false;\r\n                noninforows.each(\r\n                    function() {\r\n                        if ($(this).css('display') !== 'none') {\r\n                            anyvisible = true;\r\n                        }\r\n                    }\r\n                );\r\n                var showpastslots = $('#show_past_slots').is(':checked');\r\n                var showmyslotsonly = $('#show_my_slots_only').is(':checked');\r\n                tablebody.find('tr.info').hide();\r\n                if (!anyvisible) {\r\n                    if (noneexist) {\r\n                        tablebody.find('tr.no_slots_defined').show();\r\n                    } else if (showpastslots && !showmyslotsonly) {\r\n                        tablebody.find('tr.no_slots').show();\r\n                    } else if (showpastslots && showmyslotsonly) {\r\n                        tablebody.find('tr.no_my_slots').show();\r\n                    } else {\r\n                        tablebody.find('tr.no_due_slots').show();\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Extract visible text from 'element' down thru DOM tree.\r\n             * @param {object} element element in which to search the text\r\n             * @return {string} text\r\n             */\r\n            function extracttext(element) {\r\n                var text, last, img;\r\n\r\n                last = $(element).clone().find(\"script,style\").remove().end();\r\n                text = last.text();\r\n                if (!text) {\r\n                    img = last.find('img:not(.icon)').first();\r\n                    var attr = img.attr('alt');\r\n                    if (typeof attr !== typeof undefined && attr !== false) {\r\n                        text = attr;\r\n                    }\r\n                }\r\n                return text;\r\n            }\r\n\r\n            /**\r\n             * Save userpreference to server.\r\n             */\r\n            function saveuserpreference() {\r\n                let slotsviewoptions = '';\r\n\r\n                slotsviewoptions += $('#show_my_slots_only').is(':checked') ? '1' : '0';\r\n                slotsviewoptions += $('#show_free_slots_only').is(':checked') ? '1' : '0';\r\n                slotsviewoptions += $('#show_hidden_slots').is(':checked') ? '1' : '0';\r\n                slotsviewoptions += $('#show_past_slots').is(':checked') ? '1' : '0';\r\n                slotsviewoptions += $('#show_registrations_only').is(':checked') ? '1' : '0';\r\n                slotsviewoptions += $('#show_all_participants').is(':checked') ? '1' : '0';\r\n\r\n                $.get(config.wwwroot + '/mod/organizer/slotsviewoptions.php', {\r\n                    sesskey: config.sesskey,\r\n                    slotsviewoptions: encodeURI(slotsviewoptions),\r\n                    userid: instance.userid\r\n                }, 'json');\r\n\r\n            }\r\n\r\n            /**\r\n             * Toggle single participantslist.\r\n             * @param {object} target element which has been clicked\r\n             */\r\n            function participantslist_toggle(target) {\r\n                let clickeddiv = $(target).parent();\r\n                let targetclass = clickeddiv.attr('data-target');\r\n                $(targetclass).toggle();\r\n                let icon = clickeddiv.find('.collapseicon');\r\n                let isrc = $(icon).attr('src');\r\n                if (isrc.indexOf('minus-square') > 0) {\r\n                    isrc = isrc.replace('minus-square', 'plus-square');\r\n                } else {\r\n                    isrc = isrc.replace('plus-square', 'minus-square');\r\n                }\r\n                $(icon).attr('src', isrc);\r\n            }\r\n\r\n            /**\r\n             * Toggle all participantslists.\r\n             */\r\n            function participantslists_all_toggle() {\r\n                if (instance.registrationview == 0) {\r\n                    saveuserpreference();\r\n                }\r\n                let tablebody = $('#slot_overview tbody');\r\n                let showallparticipants = $('#show_all_participants').is(':checked');\r\n                if (showallparticipants == 1) {\r\n                    $('.mycollapse').show();\r\n                    let allicons = tablebody.find('.collapseicon');\r\n                    allicons.each(\r\n                        function() {\r\n                            let isrc = $(this).attr('src');\r\n                            isrc = isrc.replace('plus-square', 'minus-square');\r\n                            $(this).attr('src', isrc);\r\n                        }\r\n                    );\r\n                } else {\r\n                    $('.mycollapse').hide();\r\n                    let allicons = tablebody.find('.collapseicon');\r\n                    allicons.each(\r\n                        function() {\r\n                            let isrc = $(this).attr('src');\r\n                            isrc = isrc.replace('minus-square', 'plus-square');\r\n                            $(this).attr('src', isrc);\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n\r\n            $('#show_past_slots').on('click', function() { toggle_all_slots(event); });\r\n            $('#show_all_participants').on('click', function() { participantslists_all_toggle(); });\r\n            $('#show_my_slots_only').on('click', function() { toggle_all_slots(event); });\r\n            $('#show_free_slots_only').on('click', function() { toggle_all_slots(event); });\r\n            $('#show_hidden_slots').on('click', function() { toggle_all_slots(event); });\r\n            $('#show_registrations_only').on('click', function() { toggle_all_slots(event); });\r\n            $('.organizer_filtertable').on('keyup', function() { toggle_all_slots(event); });\r\n            $('.collapseclick').on('click', function() { participantslist_toggle(event.target); });\r\n            toggle_all_slots();\r\n            participantslists_all_toggle();\r\n            $('.organizer_filtertable').keypress(function(event){\r\n                var keycode = (event.which ? event.which : event.keyCode);\r\n                if(keycode == '13'){\r\n                    return false;\r\n                }\r\n            });\r\n        };\r\n\r\n        return instance;\r\n\r\n    }\r\n);\r\n"],"names":["define","$","config","instance","studentview","registrationview","userid","init","toggle_all_slots","event","undefined","saveuserpreference","tablebody","showpastslots","is","showmyslotsonly","showfreeslotsonly","showhiddenslots","showregistrationsonly","find","show","hide","target","filter","val","toUpperCase","i","j","td","text","found","tr","length","getElementsByTagName","extracttext","indexOf","noninforows","noneexist","anyvisible","each","this","css","toggle_info","element","last","clone","remove","end","attr","first","_typeof","slotsviewoptions","get","wwwroot","sesskey","encodeURI","participantslists_all_toggle","isrc","replace","on","participantslist_toggle","clickeddiv","parent","targetclass","toggle","icon","keypress","keycode","which","keyCode"],"mappings":";;;;;;IA2BAA,OAAM,4BAAC,CAAC,SAAU,gBAAgB,SAASC,EAAGC,QAMtC,IAMIC,SAAW,IANG,WACTC,KAAAA,YAAc,EACdC,KAAAA,iBAAmB,EACnBC,KAAAA,OAAS,GAkOlB,OA7NAH,SAASI,KAAO,SAASH,YAAaC,iBAAkBC,QAU3CE,SAAAA,iBAAiBC,OACXC,MAAPD,OAAiD,GAA7BN,SAASE,kBAC7BM,qBAEJ,IAAIC,UAAYX,EAAE,wBACdY,cAAgBZ,EAAE,oBAAoBa,GAAG,YACzCC,gBAAkBd,EAAE,uBAAuBa,GAAG,YAC9CE,kBAAoBf,EAAE,yBAAyBa,GAAG,YAClDG,gBAAkBhB,EAAE,sBAAsBa,GAAG,YAC7CI,sBAAwBjB,EAAE,4BAA4Ba,GAAG,YAE7DF,UAAUO,KAAK,MAAMC,OAEjBF,uBACAN,UAAUO,KAAK,qBAAqBE,OAGnClB,SAASC,aACLa,iBACDL,UAAUO,KAAK,kBAAkBE,OAIpCR,eACDD,UAAUO,KAAK,eAAeE,OAG9BN,kBACKZ,SAASC,aACVQ,UAAUO,KAAK,kBAAkBE,QAIrCL,mBACAJ,UAAUO,KAAK,oBAAoBE,OAGvC,IAAIC,OAASrB,EAAE,0BACf,GAAIqB,OAAQ,CACR,IAAIC,OAASD,OAAOE,MAAMC,cAC1B,GAAIF,OAAQ,CACR,IAEIG,EAAGC,EAAGC,GAAIC,KAAMC,MAFhBC,GAAKnB,UAAUO,KAAK,yBAGxB,IAAKO,EAAI,EAAGA,EAAIK,GAAGC,OAAQN,IAAK,CAG5B,GAFAI,OAAQ,EACRF,GAAKG,GAAGL,GAAGO,qBAAqB,MAE5B,IAAKN,EAAI,EAAGA,EAAIC,GAAGI,OAAQL,IAEvB,IADAE,KAAOK,YAAYN,GAAGD,MAEdE,KAAKJ,cAAcU,QAAQZ,SAAW,EAAG,CACzCO,OAAQ,EACR,MAKXA,OACD7B,EAAE8B,GAAGL,IAAIL,SAMzBT,UAAUQ,OACVnB,EAAE,iBAAiB4B,KAAKjB,UAAUO,KAAK,yBAAyBa,QAQpE,WACI,IAAIpB,UAAYX,EAAE,wBACdmC,YAAcxB,UAAUO,KAAK,iBAC7BkB,UAAmC,IAAvBD,YAAYJ,OACxBM,YAAa,EACjBF,YAAYG,MACR,WACmC,SAA3BtC,EAAEuC,MAAMC,IAAI,aACZH,YAAa,MAIrBzB,IAAAA,cAAgBZ,EAAE,oBAAoBa,GAAG,YACzCC,gBAAkBd,EAAE,uBAAuBa,GAAG,YAClDF,UAAUO,KAAK,WAAWE,OACrBiB,aACGD,UACAzB,UAAUO,KAAK,uBAAuBC,OAC/BP,gBAAkBE,gBACzBH,UAAUO,KAAK,eAAeC,OACvBP,eAAiBE,gBACxBH,UAAUO,KAAK,kBAAkBC,OAEjCR,UAAUO,KAAK,mBAAmBC,QA7B1CsB,GAuCKR,SAAAA,YAAYS,SACjB,IAAId,KAAMe,KAIN,KADJf,MADAe,KAAO3C,EAAE0C,SAASE,QAAQ1B,KAAK,gBAAgB2B,SAASC,OAC5ClB,QACD,CAEP,IAAImB,KADEJ,KAAKzB,KAAK,kBAAkB8B,QACnBD,KAAK,OAChB,cAAAE,QAAOF,QAAsC,IAATA,OACpCnB,KAAOmB,MAGf,OAAOnB,KAMX,SAASlB,qBACDwC,IAAAA,iBAAmB,GAEvBA,kBAAoBlD,EAAE,uBAAuBa,GAAG,YAAc,IAAM,IACpEqC,kBAAoBlD,EAAE,yBAAyBa,GAAG,YAAc,IAAM,IACtEqC,kBAAoBlD,EAAE,sBAAsBa,GAAG,YAAc,IAAM,IACnEqC,kBAAoBlD,EAAE,oBAAoBa,GAAG,YAAc,IAAM,IACjEqC,kBAAoBlD,EAAE,4BAA4Ba,GAAG,YAAc,IAAM,IACzEqC,kBAAoBlD,EAAE,0BAA0Ba,GAAG,YAAc,IAAM,IAEvEb,EAAEmD,IAAIlD,OAAOmD,QAAU,sCAAuC,CAC1DC,QAASpD,OAAOoD,QAChBH,iBAAkBI,UAAUJ,kBAC5B7C,OAAQH,SAASG,QAClB,QAyBP,SAASkD,+BAC4B,GAA7BrD,SAASE,kBACTM,qBAEJ,IAAIC,UAAYX,EAAE,wBAES,GADDA,EAAE,0BAA0Ba,GAAG,aAErDb,EAAE,eAAemB,OACFR,UAAUO,KAAK,iBACrBoB,MACL,WACQkB,IAAAA,KAAOxD,EAAEuC,MAAMQ,KAAK,OACxBS,KAAOA,KAAKC,QAAQ,cAAe,gBACnCzD,EAAEuC,MAAMQ,KAAK,MAAOS,WAI5BxD,EAAE,eAAeoB,OACFT,UAAUO,KAAK,iBACrBoB,MACL,WACQkB,IAAAA,KAAOxD,EAAEuC,MAAMQ,KAAK,OACxBS,KAAOA,KAAKC,QAAQ,eAAgB,eACpCzD,EAAEuC,MAAMQ,KAAK,MAAOS,UAnMpCtD,SAASC,YAAcA,YACvBD,SAASE,iBAAmBA,iBAC5BF,SAASG,OAASA,OAuMlBL,EAAE,oBAAoB0D,GAAG,SAAS,WAAanD,iBAAiBC,UAChER,EAAE,0BAA0B0D,GAAG,SAAS,WAAaH,kCACrDvD,EAAE,uBAAuB0D,GAAG,SAAS,WAAanD,iBAAiBC,UACnER,EAAE,yBAAyB0D,GAAG,SAAS,WAAanD,iBAAiBC,UACrER,EAAE,sBAAsB0D,GAAG,SAAS,WAAanD,iBAAiBC,UAClER,EAAE,4BAA4B0D,GAAG,SAAS,WAAanD,iBAAiBC,UACxER,EAAE,0BAA0B0D,GAAG,SAAS,WAAanD,iBAAiBC,UACtER,EAAE,kBAAkB0D,GAAG,SAAS,YArDvBC,SAAwBtC,QACzBuC,IAAAA,WAAa5D,EAAEqB,QAAQwC,SACvBC,YAAcF,WAAWb,KAAK,eAClC/C,EAAE8D,aAAaC,SACf,IAAIC,KAAOJ,WAAW1C,KAAK,iBACvBsC,KAAOxD,EAAEgE,MAAMjB,KAAK,OAEpBS,KADAA,KAAKtB,QAAQ,gBAAkB,EACxBsB,KAAKC,QAAQ,eAAgB,eAE7BD,KAAKC,QAAQ,cAAe,gBAEvCzD,EAAEgE,MAAMjB,KAAK,MAAOS,MA0CqBG,CAAwBnD,MAAMa,WAC3Ed,mBACAgD,+BACAvD,EAAE,0BAA0BiE,UAAS,SAASzD,OAEvC0D,GAAW,OADC1D,MAAM2D,MAAQ3D,MAAM2D,MAAQ3D,MAAM4D,SAE7C,OAAO,MAKZlE"}