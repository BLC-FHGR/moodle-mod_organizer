{"version":3,"file":"initinfobox.min.js","sources":["../src/initinfobox.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/.\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle. If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * @package\r\n * @subpackage organizer\r\n * @copyright 2020 Thomas Niedermaier (thomas.niedermaier@gmail.com)\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * Tab appointments view and students view: Load slot list according to view options stored in user prefs.\r\n */\r\n\r\n\r\ndefine(['jquery', 'core/config'], function($, config) {\r\n\r\n        /**\r\n     * @constructor\r\n     * @alias module:mod_organizer/initinfobox\r\n     */\r\n        var Initinfobox = function() {\r\n            this.student = 0;\r\n            this.userid = 0;\r\n        };\r\n\r\n        var instance = new Initinfobox();\r\n\r\n        instance.init = function(participant, userid) {\r\n\r\n            instance.student = participant; // Is user student or not?\r\n            instance.userid = userid; // This user ID.\r\n\r\n            /**\r\n             * What happens when a view option checkbox is clicked or the filter field has been changed.\r\n             * @param {object} event element which has been clicked\r\n             */\r\n            function toggle_all_slots(event) {\r\n                if (event!=undefined) {\r\n                    saveuserpreference();\r\n                }\r\n                var tablebody = $('#slot_overview tbody');\r\n                var showpastslots = $('#show_past_slots').is(':checked');\r\n                var showmyslotsonly = $('#show_my_slots_only').is(':checked');\r\n                var showfreeslotsonly = $('#show_free_slots_only').is(':checked');\r\n                var showhiddenslots = $('#show_hidden_slots').is(':checked');\r\n                var showregistrationsonly = $('#show_registrations_only').is(':checked');\r\n\r\n                tablebody.find('tr').show();\r\n\r\n                if (showregistrationsonly) {\r\n                    tablebody.find('tr.not_registered').hide();\r\n                }\r\n\r\n                if (!instance.student) {\r\n                    if (!showhiddenslots) {\r\n                        tablebody.find('tr.unavailable').hide();\r\n                    }\r\n                }\r\n\r\n                if (!showpastslots) {\r\n                    tablebody.find('tr.past_due').hide();\r\n                }\r\n\r\n                if (showmyslotsonly) {\r\n                    if (!instance.student) {\r\n                        tablebody.find('tr.not_my_slot').hide();\r\n                    }\r\n                }\r\n\r\n                if (showfreeslotsonly) {\r\n                    tablebody.find('tr.not_free_slot').hide();\r\n                }\r\n\r\n                var target = $('.organizer_filtertable');\r\n                if (target) {\r\n                    var filter = target.val().toUpperCase();\r\n                    if (filter) {\r\n                        var tr = tablebody.find('tr:visible:not(.info)');\r\n                        // Loop through all table rows, and hide those who don't match the search query.\r\n                        var i, j, td, text, found;\r\n                        for (i = 0; i < tr.length; i++) {\r\n                            found = false;\r\n                            td = tr[i].getElementsByTagName(\"td\");\r\n                            if (td) {\r\n                                for (j = 0; j < td.length; j++) {\r\n                                    text = extracttext(td[j]);\r\n                                    if (text) {\r\n                                        if (text.toUpperCase().indexOf(filter) > -1) {\r\n                                            found = true;\r\n                                            break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (!found) {\r\n                                $(tr[i]).hide();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                tablebody.show();\r\n                $('#counttabrows').text(tablebody.find('tr:visible:not(.info)').length);\r\n\r\n                toggle_info();\r\n            }\r\n\r\n            /**\r\n             * Check or uncheck the info row(s).\r\n             */\r\n            function toggle_info() {\r\n                var tablebody = $('#slot_overview tbody');\r\n                var noninforows = tablebody.find('tr:not(.info)');\r\n                var noneexist = noninforows.length === 0;\r\n                var anyvisible = false;\r\n                noninforows.each(\r\n                    function() {\r\n                        if ($(this).css('display') !== 'none') {\r\n                            anyvisible = true;\r\n                        }\r\n                    }\r\n                );\r\n                var showpastslots = $('#show_past_slots').is(':checked');\r\n                var showmyslotsonly = $('#show_my_slots_only').is(':checked');\r\n                tablebody.find('tr.info').hide();\r\n                if (!anyvisible) {\r\n                    if (noneexist) {\r\n                        tablebody.find('tr.no_slots_defined').show();\r\n                    } else if (showpastslots && !showmyslotsonly) {\r\n                        tablebody.find('tr.no_slots').show();\r\n                    } else if (showpastslots && showmyslotsonly) {\r\n                        tablebody.find('tr.no_my_slots').show();\r\n                    } else {\r\n                        tablebody.find('tr.no_due_slots').show();\r\n                    }\r\n                }\r\n            }\r\n\r\n            /**\r\n             * Extract visible text from 'element' down thru DOM tree.\r\n             * @param {object} element element in which to search the text\r\n             * @return {string} text\r\n             */\r\n            function extracttext(element) {\r\n                var text, last, img;\r\n\r\n                last = $(element).clone().find(\"script,style\").remove().end();\r\n                text = last.text();\r\n                if (!text) {\r\n                    img = last.find('img:not(.icon)').first();\r\n                    var attr = img.attr('alt');\r\n                    if (typeof attr !== typeof undefined && attr !== false) {\r\n                        text = attr;\r\n                    }\r\n                }\r\n                return text;\r\n            }\r\n\r\n            /**\r\n             * Save userpreference to server.\r\n             */\r\n            function saveuserpreference() {\r\n                let slotsviewoptions = '';\r\n\r\n                slotsviewoptions += $('#show_my_slots_only').is(':checked') ? '1' : '0';\r\n                slotsviewoptions += $('#show_free_slots_only').is(':checked') ? '1' : '0';\r\n                slotsviewoptions += $('#show_hidden_slots').is(':checked') ? '1' : '0';\r\n                slotsviewoptions += $('#show_past_slots').is(':checked') ? '1' : '0';\r\n                slotsviewoptions += $('#show_registrations_only').is(':checked') ? '1' : '0';\r\n                slotsviewoptions += $('#show_all_participants').is(':checked') ? '1' : '0';\r\n\r\n                $.get(config.wwwroot + '/mod/organizer/slotsviewoptions.php', {\r\n                    sesskey: config.sesskey,\r\n                    slotsviewoptions: encodeURI(slotsviewoptions),\r\n                    userid: instance.userid\r\n                }, 'json');\r\n\r\n            }\r\n\r\n            /**\r\n             * Toggle participantslist.\r\n             * @param {object} event element which has been clicked\r\n             */\r\n            function participantslist_toggle(event) {\r\n                let targetelement = event.target;\r\n                let clickeddiv = $(targetelement).parent();\r\n                let targetclass = clickeddiv.attr('data-target');\r\n                $(targetclass).toggle();\r\n            }\r\n\r\n            $('#show_past_slots').on('click', function() { toggle_all_slots(event); });\r\n            $('#show_all_participants').on('click', function() { $('.mycollapse').toggle(); });\r\n            $('#show_my_slots_only').on('click', function() { toggle_all_slots(event); });\r\n            $('#show_free_slots_only').on('click', function() { toggle_all_slots(event); });\r\n            $('#show_hidden_slots').on('click', function() { toggle_all_slots(event); });\r\n            $('#show_registrations_only').on('click', function() { toggle_all_slots(event); });\r\n            $('.organizer_filtertable').on('keyup', function() { toggle_all_slots(event); });\r\n            toggle_all_slots();\r\n            $('.collapseclick').on('click', function() { participantslist_toggle(event); });\r\n            $('.mycollapse').hide();\r\n        };\r\n\r\n        return instance;\r\n\r\n    }\r\n);\r\n"],"names":["define","$","config","instance","student","userid","init","participant","toggle_all_slots","event","slotsviewoptions","undefined","is","get","wwwroot","sesskey","encodeURI","tablebody","showpastslots","showmyslotsonly","showfreeslotsonly","showhiddenslots","showregistrationsonly","find","show","hide","target","filter","val","toUpperCase","i","j","td","text","found","tr","length","getElementsByTagName","extracttext","indexOf","noninforows","noneexist","anyvisible","each","this","css","toggle_info","element","last","clone","remove","end","attr","first","_typeof","on","toggle","participantslist_toggle","targetelement","targetclass","parent"],"mappings":"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"}